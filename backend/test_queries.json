{
  "test_queries": [
    {
      "name": "Simple SELECT",
      "query": "SELECT * FROM users WHERE email = 'john@example.com'",
      "description": "Простой запрос с фильтрацией по email"
    },
    {
      "name": "JOIN with aggregation",
      "query": "SELECT u.name, COUNT(o.id) as order_count, SUM(o.total_amount) as total_spent FROM users u LEFT JOIN orders o ON u.id = o.user_id WHERE u.is_active = true GROUP BY u.id, u.name ORDER BY total_spent DESC",
      "description": "Запрос с JOIN и агрегацией"
    },
    {
      "name": "Complex subquery",
      "query": "SELECT * FROM users WHERE id IN (SELECT user_id FROM orders WHERE total_amount > (SELECT AVG(total_amount) FROM orders))",
      "description": "Запрос с подзапросом"
    },
    {
      "name": "Window function",
      "query": "SELECT name, total_amount, ROW_NUMBER() OVER (PARTITION BY user_id ORDER BY total_amount DESC) as rank FROM orders o JOIN users u ON o.user_id = u.id",
      "description": "Запрос с оконными функциями"
    },
    {
      "name": "Inefficient query (no index)",
      "query": "SELECT * FROM users WHERE name LIKE '%John%'",
      "description": "Неэффективный запрос без индекса"
    },
    {
      "name": "Multiple JOINs",
      "query": "SELECT u.name, o.total_amount, oi.product_name, oi.quantity FROM users u JOIN orders o ON u.id = o.user_id JOIN order_items oi ON o.id = oi.order_id WHERE o.status = 'completed'",
      "description": "Запрос с множественными JOIN"
    },
    {
      "name": "Aggregation with HAVING",
      "query": "SELECT user_id, COUNT(*) as order_count, AVG(total_amount) as avg_amount FROM orders GROUP BY user_id HAVING COUNT(*) > 1",
      "description": "Агрегация с условием HAVING"
    },
    {
      "name": "Date range query",
      "query": "SELECT * FROM orders WHERE created_at >= '2024-01-01' AND created_at < '2025-01-01'",
      "description": "Запрос по диапазону дат"
    },
    {
      "name": "Inefficient implicit JOIN",
      "query": "SELECT u.name, o.total_amount FROM users u, orders o WHERE u.id = o.user_id AND o.status = 'completed'",
      "description": "Неэффективный неявный JOIN (через запятую)"
    },
    {
      "name": "Subquery that can be JOIN",
      "query": "SELECT u.name, (SELECT COUNT(*) FROM orders WHERE user_id = u.id) as order_count FROM users u WHERE u.is_active = true",
      "description": "Подзапрос, который можно заменить на JOIN"
    },
    {
      "name": "No LIMIT on large result",
      "query": "SELECT * FROM users ORDER BY created_at DESC",
      "description": "Запрос без LIMIT, который может вернуть много строк"
    },
    {
      "name": "Inefficient WHERE with function",
      "query": "SELECT * FROM users WHERE UPPER(name) = 'JOHN DOE'",
      "description": "Неэффективное условие WHERE с функцией"
    },
    {
      "name": "Multiple subqueries",
      "query": "SELECT name FROM users WHERE id IN (SELECT user_id FROM orders WHERE total_amount > (SELECT AVG(total_amount) FROM orders WHERE status = 'completed'))",
      "description": "Множественные подзапросы, которые можно оптимизировать"
    },
    {
      "name": "Inefficient LIKE pattern",
      "query": "SELECT * FROM users WHERE name LIKE '%John%' OR email LIKE '%john%'",
      "description": "Неэффективные паттерны LIKE с ведущими символами"
    },
    {
      "name": "Cross join instead of proper JOIN",
      "query": "SELECT u.name, o.total_amount FROM users u CROSS JOIN orders o WHERE u.id = o.user_id",
      "description": "CROSS JOIN вместо обычного JOIN"
    }
  ]
}
